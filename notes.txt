TODO
    погуглить метрики качества технологии в целом
    Понятность: метрики для технологии, фреймворка
    нарисовать блок схему технологии?
    Может ТРИЗ перечитать?

Контрольные вопросы для разработки:
- Как контролировать качество фреймворка
- Стоимость vs Гибкость: Ведь чем больше гибкости, тем больше "ручек" надо крутить. Это закон природы.
    - В какой точке баланса я нахожусь сейчас?
    - В какую сторону мне двигаться?
- Как одновременно развивать продукт и делать фиксы
- фактор "другого промо проекта": появляется другой промо проект и ломает всё.
- Как бы я сделал свои рабочие проекты на этом? (Поддержи сборную)
- Могу ли я один это реализовать? Почему и сколько надо

Как контролировать качество фреймворка.
    - Создать повторяющиеся задачи по аудиту
    - Контрольный набор скриншотов. 150 скриншотов.
    - Гибкость: Процент выполнения скриншотов (150 скринов -> 693 фичи)
        Понятие фичи может быть размытым.
    - Удобство: ?
        - это стоимость или нет?
    - Стоимость:
        Это мерить сложно:
        Стоимость создания пользователем публикации.
        Стоимость создани шаблона.
        Стоимость создания промо-продукта.
    - Понятность: todo
    - Стабильность: количество открытых багов.
    - ? Наличие фреймворка
    - ? Стабильность редактора
    - ? Документация
    - ? Время на создание шаблона
    - ? Время на создание промопродукта

Удобство (быстрота) пользователя
    Сознательно отказываемся от этой метрики. Это можно будет мерить только на больших выборках пользователей.
    Мы знаем, что у нас большой выбор вспомогательных инструментов для улучшения:
        - Шаблоны и фильтры витрины
        - Темы, пресеты, палитры и т.п.

Стоимость Теста vs Гибкость Теста (по пользователю):
    Идеальный вариант: вбиваю только контент.
    Гибкость - насколько разнообразные тесты я могу создать.
    Крайние случаи:
        веб-программирование - могу разработать, что хочу. Дорого.
        "Одна настройка" - могу сменить один текст за 5 секунд.
Стоимость Теста vs Гибкость Теста (по дизайнеру):

Контрольные вопросы по аудиту:
    - Не делаю ли того что уже есть?
    - Баланс быстроты и гибкости
        Ведь чем больше гибкости, тем больше "ручек" надо крутить. Это закон природы.




TODO
темы (пресеты свойств)

проблема выделения: родитель и потомок - разные стили
    Верстка? Расширенный дескрипор?

фреймворк для приложений
    - четкое понятие экрана
    - слои (для статики)
    - вью рисовать из шаблона и передавать данные
    	все вью и сабвью должны быть отделены
    	вью "экраны" выделены отдельно, уметь их перерисовывать и отдавать
    - позиционирование (либо выравнивание, либо драг)
    	и учитывание размеров приложения
    - модели наверное надо ввести
    - свойства (app и css) может быть изменено не только редактором. Но и самим приложением
            Зависимые друг от друга свойства здесь же
            Сейчас такие случаи не будут учитываться. Произойдет рассинхронизация представления в редакторе (скрин и контролы) и того что на самом деле
            Надо менять свойства через модель model.set({p1: v1});
            или view.find('sel1').css(prop1, val1);
            Это решит в приложении все проблемы с зависимостями

консоль управления: мердж, версионирование, тестирование
    - Применить шаблон от одного к другому

Профи режим: редактирование дескриптора: вкл/откл

Различные варианты размещения опций: в одну колонку, в две колонки

Статика (текст, картинки)

Ответы - произвольные точки на слайде (надо попасть в одну или во все)
Пример: http://www.the-village.ru/village/situation/safe-internet/233305-safe-shopping
