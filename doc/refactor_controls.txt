1
syncUIControlsToAppProperties
вызывается в одних контролах вручную, в других нет. Нет централизованного вызова.
Почему то стоит под условием if (updateScreens === true) только в некоторых контролах:
    ClickAndAddToArray стоит под TODO для панорамы
        новые пин - несколько новых контролов для стилей..
    AddArrayElementControl - создание/удаление элемента массива это появление исчезновение многих свойств
    DeleteQuickButton нужна синхронизация после удаления пина, очевидно, но этого вызова там не было. Почему?
    SlideGroupcontrol - создание/удаление экрана это появление исчезновение многих свойств
    Остаются контролы-зомби в остальных случаях, так как нет центральной синхронизации
        Если вызывать всегда sync после каждого setValue ?
            Концепция "удаление всего, проход по всем свойствам и пересоздание всего" не подойдет для клиента, быстро вылезут тормоза.

        Если свойство в mutapp и есть сразу: value, propertyString, control
            нормализация значения
            контрол как способ его управления
            адрес propertyString
            уникальный ид
            события об изменении?
                1) классические события backbone
                2) можно сделать события вовне mutapp если надо
            label
      !     В дескрипторе есть селектор позволяющий описать несколько свойств сразу
                А здесь будет класс (или прототип) с созданием нескольких инстансов. MutProperty.extends({ /*your code*/ })
                Заготовленные MutPropertyString.extends({ /*your code*/ })
            версионирование, время изменения
      !     Апдейтить экран или нет, и какие
                Цвет фона всех страниц - апдейтить всё
                Цвет фона одной страницы - один экран
                    Или же просто цвет апдейтить в clonedScreens
                        Нет AppScreen, есть ClonedScreen в mutapp, просто апдейтится во всех клонированных экранах
                То есть просто апдейтятся экраны приложения, согласно логике. Просто часть из них показана в редакторе
      !     Надо перезапускать приложение или нет
                Возможно, при такой схеме это не потребуется вообще...
            init/destroy подчистить обработчики и таймеры
                Решение: требовать, что разработчик приложения обязан зачищать объект перед удалением.
     !           при установке нового массива надо вычистить старые элементы, которые исчезнут после присвоения
                это как раз проблемы описанная в DeleteQuickControl панорамы
      !      Вложенность
                Можем добавить/удалить элемент массива, а можно свойства внутри элемента массива
                    Отношения родитель-предок?
                    Пересчитывать всё и всегда? При операции с массивами, с объектами
                        А что рендерить или не рендерить?
                            Как обычно в приложени это решается? Логикой просто!!
                                Это важная мысль: я пытался заменить логику приложения набором правил, движком... По сути неуклюже дублируя её.
                                Если ты хочешь изменять массив пинов: должны быть методы setPins в приложении, которые делают что надо, а не просто это массив, который из вне управляется движком/редактором.
        Начальная идея:
            Приложение, в котором можно изменять свойства в редакторе и получать разные приложения и шаблоны.


        Критерии:
            автотестируемость
            можно ли экраны показать в iframe?
            можно ли показать превью?