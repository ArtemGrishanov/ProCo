/**
 * Created by artyom.grishanov on 01.06.16.
 *
 * Рано или поздно мы пришли бы к фреймворку.
 * Возникающие задачи и вопросы лучше будет решать в рамках фреймворка.
 *
 * Каждый объект который имеет какие то настройки - это Вью
 *
 * Сформулировать вопросы:
 * 1) Задача: Как обеспечить достаточное разнообразие, Как быть уверенным что этого достаточно кроме того что пробовать итеративно?
 * Можно ли как то посчитать фичи. Или сервисы технологии?
 * Входные данные: множество готовых тестов.
 * === Механизмы ===:
 * css appproperty
 * Css Propety сериализуются в промо приложение
 * Селекторы appProperty (сразу много свойств можно выбрать)
 * альтернатива в выборе значений appProperty
 * valuePattern для appProperty
 * Прототипы в AppProperty для редактирования массивов
 * Директивы data-app-property: это связь dom-элемента и appProperty. По клику активируются контролы
 * Понятие экрана: превью экранов, апдейт экранов. Надо уметь показывать несколько экранов одновременно.
 * Данные в экране, которые нужны для рендера и триггеров
 * Функция applyStyles ?
 * Триггеры: кастомные действия связанные с редактированием
 * Templates: сериализованные appProperties
 * Публикация: перезапись в файле приложения app+css
 * Нет: зависимости свойств
 * Нет: Темы (пресеты appProperties)
 * Нет: АвтоТесты
 * Нет: дополнительные экраны?
 * Есть так много, а нету так мало? Надо ли?
 *
 * 2) Решение задачи: Технология:
 * Фреймворк: понятный описанный стандарт разработки приложений.
 * Редактор: в котором можно управлять приложением, используя стандартные контролы
 * Апи: хранение данных, статистика,
 *
 * 3) Вопросы Лейаут
 * Веб + моб
 * Что будет с версткой существующих приложений при добавлении новых компонентов/опций?
 * Как будет ломаться лейаут при установке css свойств
 */
var BullitClass = MutApp.View.extend({

    tags: null, // question_bullits,

    init: function(params) {
        this.model.on('something',onSomethingChanged);
    },

    onSomethingChanged: function() {

    },

    model: null,

    appProperty: {
        borderRadius: 0,
        borderWidth: 1,
    },

    templates: {
        // разные стейты
    },

    states: [
        // нормал
        // селектед
        // ховер
        // right answer
        // wrong answer
    ],

    //TODO пиктограммы - это сервис редактора, просто пишу чтобы не забыть

    render: function() {

    },

    parent: null,

    children: null,

    setBackground: function() {
        // сменить у всех вью
        // но опять такие у всех буллитов вопросов, может где то еще еть буллиты у которых не надо менять
        // ...

        // применить то же для всех с этими тегами
        MutApp.applyToAll('tags'+this.tag);
    }

    // ограничения
    // квадратность, макс-мин размеры


    // зависимости во вью
    // если был установлен фон-пиктограма (картинка), то снять стандартные стили

});

var logoClass = MutApp.View.extend({


    // startLogo, resultLogo - можно пометить чтобы сделать связь
    tags: [],

    appProperties: {
        // drag: свойство должно соответствовать тому контролу которы предполагается использовать
        position: {top: 0, left: 0},

    }
});